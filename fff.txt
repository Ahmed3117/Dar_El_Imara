class MyAdminSite(admin.AdminSite):
    # Define the order of headers (groups of models)
    index_ordering = (
        'Header1',
        'Header2',
    )


-----------------------------------------

from django import forms
from django.contrib import admin
from .models import Author, Book

class BookAdminForm(forms.ModelForm):
    class Meta:
        model = Book
        fields = '__all__'

    def __init__(self, *args, **kwargs):
        super(BookAdminForm, self).__init__(*args, **kwargs)
        # Filter the authors by name "Ahmed"
        self.fields['author'].queryset = Author.objects.filter(name="Ahmed")

class BookAdmin(admin.ModelAdmin):
    form = BookAdminForm

admin.site.register(Author)
admin.site.register(Book, BookAdmin)


------------------------------------------------------


from django import forms
from django.contrib import admin
from .models import Author, Book

class BookAdminForm(forms.ModelForm):
    class Meta:
        model = Book
        fields = '__all__'

    def __init__(self, *args, **kwargs):
        super(BookAdminForm, self).__init__(*args, **kwargs)

class BookAdmin(admin.ModelAdmin):
    form = BookAdminForm

    def formfield_for_foreignkey(self, db_field, request, **kwargs):
        if db_field.name == "author":
            # Get the selected book_type
            selected_book_type = request.POST.get("book_type", None)

            # Filter the authors based on the selected book_type
            if selected_book_type:
                kwargs["queryset"] = Author.objects.filter(type=selected_book_type)

        return super().formfield_for_foreignkey(db_field, request, **kwargs)

admin.site.register(Author)
admin.site.register(Book, BookAdmin)

